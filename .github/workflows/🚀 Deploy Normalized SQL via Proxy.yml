name: üöÄ Deploy Normalized SQL via Proxy

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "scripts/**/*.sql"
      - ".github/workflows/üöÄ Deploy Normalized SQL via Proxy.yml"

jobs:
  deploy-normalized-sql:
    runs-on: ubuntu-latest
    env:
      PROJECT_REF: ${{ secrets.PROJECT_REF }}
      SQL_PROXY_URL: ${{ secrets.SQL_PROXY_URL }}
      SQL_PROXY_SECRET: ${{ secrets.SQL_PROXY_SECRET }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
    steps:
      - name: üì¶ Checkout Repository
        uses: actions/checkout@v4

      - name: üöÄ Deploy SQL files
        run: |
          echo "üì¶ Deploying SQL files via proxy to Supabase project: $PROJECT_REF"
          echo "üìÅ Using SQL directory: ./scripts"

          for file in ./scripts/*.sql; do
            filename=$(basename "$file")
            if [ "$filename" == "enforce_foreign_keys.sql" ]; then
              echo "üö® Special handling for $filename"

              SQL_CONTENT=$(cat "$file" | jq -Rs .)
              RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "$SQL_PROXY_URL" \
                -H "apikey: $SUPABASE_SERVICE_ROLE_KEY" \
                -H "x-proxy-secret: $SQL_PROXY_SECRET" \
                -H "Content-Type: application/json" \
                -d "{\"sql\": $SQL_CONTENT}"
              )

              HTTP_STATUS=$(echo "$RESPONSE" | tail -n1)
              RESPONSE_BODY=$(echo "$RESPONSE" | sed '$ d')

              if [ "$HTTP_STATUS" -eq 200 ]; then
                echo "‚úÖ Success: $filename"
              else
                echo "‚ùå Failed: $filename (HTTP $HTTP_STATUS)"
                echo "Response: $RESPONSE_BODY"
                exit 1
              fi

            else
              echo "üöÄ Applying: $file"
              SQL_CONTENT=$(cat "$file" | jq -Rs .)

              RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "$SQL_PROXY_URL" \
                -H "Authorization: Bearer $SUPABASE_SERVICE_ROLE_KEY" \
                -H "x-proxy-secret: $SQL_PROXY_SECRET" \
                -H "Content-Type: application/json" \
                -d "{\"sql\": $SQL_CONTENT}"
              )

              HTTP_STATUS=$(echo "$RESPONSE" | tail -n1)
              RESPONSE_BODY=$(echo "$RESPONSE" | sed '$ d')

              if [ "$HTTP_STATUS" -eq 200 ]; then
                echo "‚úÖ Success: $file"
              else
                echo "‚ùå Failed to apply $file (HTTP $HTTP_STATUS)"
                echo "Response: $RESPONSE_BODY"
                exit 1
              fi
            fi
          done
